#!/usr/bin/env python3

"""
Make a new release version of BiblioPixel by editing CHANGELIST.md

"""
# TODO: Migrate to https://github.com/olivierlacan/keep-a-changelog

import datetime, os, subprocess, sys
import re

DRY_RUN = False
ROOT = os.path.dirname(os.path.dirname(__file__))
CHANGELIST_FILE = os.path.join(ROOT, 'CHANGELIST.md')
INIT_FILE = os.path.join(ROOT, 'bibliopixel', '__init__.py')


with open(INIT_FILE) as fp:
    try:
        init = fp.read()
        __version__ = re.search(r'__version__\s*=\s*[\'"]([^\'"]*)[\'"]', init).group(1)
    except IndexError:
        raise RuntimeError('Unable to determine details of package.')


def new_version(new_version_string=''):
    def call(s, *args):
        return subprocess.check_call(s.split() + list(args))

    def split_version(s):
        return tuple(int(i) for i in s.split('.'))

    old_version = split_version(__version__)

    if new_version_string:
        if new_version_string.startswith('v'):
            new_version_string = new_version_string[1:]
        new_version = split_version(new_version_string)
    else:
        new_version = old_version[:2] + (old_version[2] + 1,)
        new_version_string = '.'.join(str(i) for i in new_version)

    assert new_version > old_version

    comments = []
    print('Changes for CHANGELIST:')
    while True:
        comment = input('- ')
        if not comment:
            break
        comments.append('- ' + comment + '\n')

    if not comments:
        raise ValueError(
            'There must be at least one new change in CHANGELIST.md')

    with open(INIT_FILE, 'r+', encoding='utf8') as fp:
        init = fp.read()
        sub = re.subn(r"__version__\s*=\s*\\*[\'\"]([^\'\"]*)\\*[\'\"]",
                      "__version__ = '{}'".format(new_version_string),
                      init)
        fp.seek(0)
        fp.write(sub[0])
        fp.truncate()

    changelist = open(CHANGELIST_FILE).read()
    with open(CHANGELIST_FILE, 'w') as fp:
        date = datetime.datetime.now().strftime('%Y-%m-%d')
        fp.write('## v%s - %s\n' % (new_version_string, date))
        for c in comments:
            fp.write(c)
        fp.write('\n')
        fp.write(changelist)

    commit_comment = 'v' + new_version_string
    call('git commit bibliopixel/VERSION CHANGELIST.md -m', commit_comment)
    call('git push')


if __name__ == '__main__':
    new_version(*sys.argv[1:])
